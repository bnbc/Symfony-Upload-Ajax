{% block bnbc_ajax_file_widget %}
    {% spaceless %}

    <div id="{{ id }}_bnbc_ajax_file_widget" class="bnbc-ajax-file-widget">
        {{ block('hidden_widget') }}
        
        {# A SUPPRIMER QUAND BIEN TESTER
        {% for name, val in form.vars.formData %}
            {% if val %}
                <input type="hidden" value="{{ val }}" name="{{ id }}_{{ name }}" id="{{ id }}_{{ name }}" />
            {% endif %}
        {% endfor %}   
        #}
        
        {% macro createHiddenInputFormData(id, datas, name) %}  
            {% if datas|length %}
                {% for subname, value in datas %} 
                    {# Si valeur null on n'affiche pas le champs afin de prendre la valeur par défaut #}
                    {% if value is not null %}                      
                        {% if name == '' %}
                        {% set varName = subname %}
                        {% else %}
                        {% set varName = name ~ '[' ~ subname ~ ']' %}
                        {% endif %}
                        {% if value is iterable %}
                            {{ _self.createHiddenInputFormData(id, value, varName) }}
                        {% else %}                                                    
                            <input type="hidden" value="{{ value }}" name="{{ id }}_{{ varName }}" id="{{ id }}_{{ varName|replace({'[': '-'})|replace({']': '-'}) }}" />
                        {% endif %}
                    {% endif %} 
                {% endfor %}        
            {% endif %}        
        {% endmacro createHiddenInputFormData %}        

        {% macro pushFormData(id, datas, name) %}       
            {% if datas|length %}
                {% for subname, value in datas %}   
                    {% if value is not null %}                    
                        {% if name == '' %}
                        {% set varName = subname %}
                        {% else %}
                        {% set varName = name ~ '[' ~ subname ~ ']' %}
                        {% endif %}
                        {% if value is iterable %}
                            {{ _self.pushFormData(id, value, varName) }}
                        {% else %}                                                    
                            {{ id }}_formData.push({'name': '{{ varName }}', value: '{{ value }}'});
                        {% endif %}
                    {% endif %}
                {% endfor %}        
            {% endif %}        
        {% endmacro pushFormData %}

        {% import _self as macros %}
        {{ macros.createHiddenInputFormData(id, form.vars.formData, '') }}

        <div id="{{ id }}_button_replace" class="bnbc-ajax-file-button-replace">
            {% set type = 'file' %}
            {% set original_id = id %}
            {% set id = 'bnbc_ajax_file_' ~ original_id %}
            {% set full_name = 'bnbc_ajax_file_' ~ full_name %}

            {% if form.vars.multiple %}
            {%  set attr = {'multiple': form.vars.multiple} %}
            {% endif %}
            {% set required = form.vars.required %}
            <label class="bnbc-ajax-file-button-replace-label">
                {{ block('form_widget_simple') }}
                {% if form.vars.label %}
                <span class="bnbc-ajax-file-button-replace-label-text">{{ form.vars.label }}</span>
                {% endif %}
            </label>
        </div>
        {% if form.vars.dropZone %}
        <div id="{{ id }}_dropzone" class="bnbc-ajax-file-dropzone">{{ form.vars.dropZoneText }}</div>
        {% endif %}

        <script type="text/javascript">

            {# Surcharge des options d'upload #}            
            {# A SUPPRIMER QUAND BIEN TESTER
            {{ id }}_formData = [];
            {% for name, value in form.vars.formData %}
                {% if value %}
                    {{ id }}_formData.push({'name': '{{ name }}', value: '{{ value }}'});
                {% endif %}
            {% endfor %}
            #}  

            {{ id }}_formData = []; 
            {{ macros.pushFormData(id, form.vars.formData, '') }}     

            {# Création de la liste des fichiers #}
            var {{ id }}CreateList = function(){
                var list = $('#{{ id }}_list');
                if(!list.length){
                    list = $('<ul/>').attr('id', '{{ id }}_list').addClass('bnbc-ajax-file-list');
                    $('#{{ original_id }}_bnbc_ajax_file_widget').append(list);
                }
                return list;
            }

            {# Création d'un bouton d'upload #}
            var {{ id }}CreateManualSubmit = function(){
                var submit = $('#{{ id }}_manual_submit');
                if(!submit.length){
                    submit = $('<a/>').attr('id', '{{ id }}_manual_submit').addClass('bnbc-ajax-file-manual-submit').text('{% trans %}Upload files{% endtrans %}');
                    $('#{{ id }}_list').after(submit);
                    submit.click(function(){
                        $.each({{ id }}_add, function (key, data) {
                            data.submit();
                        });
                    });
                }
                return submit;
            }

            {# Création de la barre de progression #}
            {% if form.vars.progressBar == true %}
            var {{ id }}CreateProgressBar = function(){
                var progress = $('#{{ id }}_progress');
                if(!progress.length){
                    progress = $('<div/>').attr('id', '{{ id }}_progress').addClass('{{ form.vars.progressBarClass }}');
                    $('#{{ original_id }}_bnbc_ajax_file_widget').{{ form.vars.progressBarPosition }}(progress);
                }
                return progress;
            }
            {% endif %}

            {# Tableau pour contenir les fichiers ajoutés via le bouton parcourir, utilisé quand l'auto-upload est défini à false #}
            var {{ id }}_add = [];

            {# Tableau qui va contenir tous les champs d'upload afin de les executer à la fin #}
            if (typeof bnbc_ajax_file == 'undefined')
                bnbc_ajax_file = [];

            bnbc_ajax_file.push(function(){

                var id = '{{ id }}';
                var original_id = '{{ original_id }}';

                {# Si jamais on refresh la page on vide le champs caché original qui pourrait contenir des fichiers non existant sauf si on est dans le cas d'une édition et ou le champs aurait déjà une valeur qu'il faut garder #}         
                if(!$('#' + id).attr('value'))
                    $('#' + original_id).val('');

                {# Call fileupload plugin #}
                $('#' + id).fileupload({
                    url: '{{ path('bnbc_upload_default_index') }}',
                    dataType: 'json',
                    formData: {{ id }}_formData,
                    paramName: 'bnbc_ajax_file_form[]',
                    {% if form.vars.dropZone %}
                    dropZone: ('#' + id + '_dropzone'),
                    {% endif %}
                    autoUpload: {% if form.vars.autoUpload %}true{% else %}false{% endif %},
                    {% if form.vars.autoUpload == false %}
                    add: function (e, data) {
                        var list = {{ id }}CreateList();
                        {{ id }}CreateManualSubmit();

                        var li = $('<li/>').text(data.files[0].name);
                        list.append(li);
                        {{ id }}_add.push(data);
                    },
                    {% endif %}
                    progressall: function (e, data) {
                        var percent = parseInt(data.loaded / data.total * 100, 10);
                        {% if form.vars.progressBar == true %}
                        var progressBar = {{ id }}CreateProgressBar();                        
                        progressBar.css(
                            'width',
                            percent + '%'
                        ).text(percent + '%');
                        {% endif %}

                        {% if form.vars.progressElement is not null %}
                        $('{{ form.vars.progressElement }}').attr('data-progress', percent);
                        {% endif %}

                        {% if form.vars.progressText is not null %}
                        $('{{ form.vars.progressText }}').text(percent + '%');
                        {% endif %}
                    },
                    done: function (e, data) {
                        var list = {{ id }}CreateList();

                        {% if form.vars.multiple != true %}
                            $('#' + original_id).val('');
                            list.empty();
                        {% endif %}

                        $.each(data.result.bnbc_ajax_file_form, function (index, file) {
                            if(file.error){
                                var li = $('<li/>').html('<b>' + file.name + ':</b> ' + file.error).addClass('error');
                                list.append(li)
                            }
                            else {
                                var originalId = '#' + original_id;
                                $(originalId).val(bnbcAjaxFileSetValue($(originalId).val(), file.name, ';'));
                                var li = list.find('li:contains(' + file.name + ')');
                                if(!li.length){
                                    li = $('<li/>').text(file.name);
                                    list.append(li);
                                }
                                else
                                    li.addClass('active');
                            }
                        });
                        {% if form.vars.callbackFunction %}
                        {{callbackFunction}}(data.result.bnbc_ajax_file_form);
                        {% endif %}
                    }
                });
            });
        </script>
    </div>
    {% endspaceless %}
{% endblock %}